package encoding

import "testing"
import "bytes"
import "bufio"
import "fmt"

func TestNewReader(t *testing.T) {
	for _, c := range utf16ReaderTestCases {
		expected := c.expected
		got, _ := bufio.NewReader(NewReader(bytes.NewReader(c.data))).ReadString('\r')
		if got != expected {
			fmt.Println(len(expected))
			fmt.Println(len(got))
			t.Errorf("For '%#v', '%s' was expected, but got '%s'", c.data, expected, got)
		}
	}
}

var utf16ReaderTestCases = []struct {
	data     []byte
	expected string
}{
	{
		[]byte{0xfe, 0xff, 0x00, 0x32, 0x00, 0x38, 0x00, 0x2f, 0x00, 0x31, 0x00, 0x30, 0x00, 0x2f, 0x00, 0x32,
			0x00, 0x30, 0x00, 0x31, 0x00, 0x36, 0x00, 0x20, 0x00, 0x31, 0x00, 0x31, 0x00, 0x3a, 0x00, 0x35,
			0x00, 0x34, 0x00, 0x3a, 0x00, 0x30, 0x00, 0x30, 0x00, 0x20, 0x00, 0x3a, 0x00, 0x20, 0x00, 0x4c,
			0x00, 0x6f, 0x00, 0x67, 0x00, 0x20, 0x00, 0x66, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x20,
			0x00, 0x6f, 0x00, 0x70, 0x00, 0x65, 0x00, 0x6e, 0x00, 0x65, 0x00, 0x64, 0x00, 0x21, 0x00, 0x20,
			0x00, 0x28, 0x00, 0x42, 0x00, 0x57, 0x00, 0x49, 0x00, 0x46, 0x00, 0x61, 0x00, 0x63, 0x00, 0x65,
			0x00, 0x42, 0x00, 0x61, 0x00, 0x73, 0x00, 0x69, 0x00, 0x63, 0x00, 0x20, 0x00, 0x76, 0x00, 0x2e,
			0x00, 0x20, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x32, 0x00, 0x30, 0x00, 0x32,
			0x00, 0x29, 0x00, 0x0d, 0x00, 0x0a},
		"28/10/2016 11:54:00 : Log file opened! (BWIFaceBasic v. 1.0.202)\r",
	},
	{
		[]byte{0xff, 0xfe, 0x32, 0x00, 0x38, 0x00, 0x2f, 0x00, 0x31, 0x00, 0x30, 0x00, 0x2f, 0x00, 0x32, 0x00,
			0x30, 0x00, 0x31, 0x00, 0x36, 0x00, 0x20, 0x00, 0x31, 0x00, 0x31, 0x00, 0x3a, 0x00, 0x35, 0x00,
			0x34, 0x00, 0x3a, 0x00, 0x30, 0x00, 0x30, 0x00, 0x20, 0x00, 0x3a, 0x00, 0x20, 0x00, 0x4c, 0x00,
			0x6f, 0x00, 0x67, 0x00, 0x20, 0x00, 0x66, 0x00, 0x69, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x20, 0x00,
			0x6f, 0x00, 0x70, 0x00, 0x65, 0x00, 0x6e, 0x00, 0x65, 0x00, 0x64, 0x00, 0x21, 0x00, 0x20, 0x00,
			0x28, 0x00, 0x42, 0x00, 0x57, 0x00, 0x49, 0x00, 0x46, 0x00, 0x61, 0x00, 0x63, 0x00, 0x65, 0x00,
			0x42, 0x00, 0x61, 0x00, 0x73, 0x00, 0x69, 0x00, 0x63, 0x00, 0x20, 0x00, 0x76, 0x00, 0x2e, 0x00,
			0x20, 0x00, 0x31, 0x00, 0x2e, 0x00, 0x30, 0x00, 0x2e, 0x00, 0x32, 0x00, 0x30, 0x00, 0x32, 0x00,
			0x29, 0x00, 0x0d, 0x00, 0x0a, 0x00},
		"28/10/2016 11:54:00 : Log file opened! (BWIFaceBasic v. 1.0.202)\r",
	},
	{
		[]byte{0xef, 0xbb, 0xbf, 0x32, 0x38, 0x2f, 0x31, 0x30, 0x2f, 0x32, 0x30, 0x31, 0x36, 0x20, 0x31, 0x31,
			0x3a, 0x35, 0x34, 0x3a, 0x30, 0x30, 0x20, 0x3a, 0x20, 0x4c, 0x6f, 0x67, 0x20, 0x66, 0x69, 0x6c,
			0x65, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x21, 0x20, 0x28, 0x42, 0x57, 0x49, 0x46, 0x61,
			0x63, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x20, 0x76, 0x2e, 0x20, 0x31, 0x2e, 0x30, 0x2e, 0x32,
			0x30, 0x32, 0x29, 0x0d, 0x0a},
		"28/10/2016 11:54:00 : Log file opened! (BWIFaceBasic v. 1.0.202)\r",
	},
	{
		[]byte{0x32, 0x38, 0x2f, 0x31, 0x30, 0x2f, 0x32, 0x30, 0x31, 0x36, 0x20, 0x31, 0x31,
			0x3a, 0x35, 0x34, 0x3a, 0x30, 0x30, 0x20, 0x3a, 0x20, 0x4c, 0x6f, 0x67, 0x20, 0x66, 0x69, 0x6c,
			0x65, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x21, 0x20, 0x28, 0x42, 0x57, 0x49, 0x46, 0x61,
			0x63, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x20, 0x76, 0x2e, 0x20, 0x31, 0x2e, 0x30, 0x2e, 0x32,
			0x30, 0x32, 0x29, 0x0d, 0x0a},
		"28/10/2016 11:54:00 : Log file opened! (BWIFaceBasic v. 1.0.202)\r",
	},
}
